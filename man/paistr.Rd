% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paistr.R
\name{paistr}
\alias{paistr}
\alias{is_paistr}
\alias{tidy.skksph_paistr}
\title{\code{paistr} vector}
\usage{
paistr(x = character())

is_paistr(x)

\method{tidy}{skksph_paistr}(x, ...)
}
\arguments{
\item{x}{\itemize{
\item For \code{paistr()}: Character vector.
\item For \code{is_paistr()}: An object to test.
\item For \code{tidy()}: An object to tidy up.
}}

\item{...}{Other arguments for \code{tidy()}.}
}
\value{
\itemize{
\item For \code{paistr()}: An object of class \code{skksph_paistr}.
\item For \code{is_paistr()}: A logical vector.
\item For \code{tidy()}: A data frame.
}
}
\description{
Create a \code{paistr} vector from a character vector
that represents player's hands.
}
\details{
Note that the validation of this function is not so strict.
For example, \code{paistr("z0")} still produces a valid \code{paistr} vector
even though "z0" is not an existing tile.

Those \code{paistr} are simply ignored in wrappers for 'cmajiang' functions,
so they are not harmful.
}
\examples{
pai <- paistr(c("m055z7z7,m78-9,z5555,z666=", "m123s789z1117*,p5550"))
print(pai)
is_paistr(pai)
tidy(pai)
}
