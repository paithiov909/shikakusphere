% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/paistr.R
\name{paistr}
\alias{paistr}
\alias{is_paistr}
\alias{plot.skksph_paistr}
\alias{tidy.skksph_paistr}
\title{\code{paistr} vector}
\usage{
paistr(x = character())

is_paistr(x)

\method{plot}{skksph_paistr}(x, y, ...)

\method{tidy}{skksph_paistr}(x, ...)
}
\arguments{
\item{x}{\itemize{
\item For \code{paistr()}: A character vector.
\item For \code{is_paistr()}: An object to test.
\item For \code{plot()}: An object to plot as an image.
\item For \code{tidy()}: An object to tidy up.
}}

\item{y}{\itemize{
\item For \code{plot()}: Not used.
}}

\item{...}{Other arguments for \code{plot()} or \code{tidy()}.}
}
\value{
\itemize{
\item For \code{paistr()}: An object of class \code{skksph_paistr}.
\item For \code{is_paistr()}: A logical scalar.
\item For \code{plot()}: A bitmap image that internally converted
by \code{magick::image_read_svg()} is invisibly returned.
\item For \code{tidy()}: A tibble.
}
}
\description{
Create a \code{paistr} vector from a character vector
that represents player's hands.
}
\details{
Note that the validation of this function is not so strict.
For example, \code{paistr("z0")} still produces a valid \code{paistr} vector
even though "z0" is not a tile that actually exists.
These \code{paistr} are simply ignored by the 'cmajiang' function wrapper.

The number of tiles displayed when \code{print()} is not always accurate,
so if you need to count the actual number of tiles, use \code{tidy()}.
}
\examples{
pai <- paistr(c("m055z7z7,m78-9,z5555,z666=", "m123s789z1117*,p5550"))
print(pai)
is_paistr(pai)
tidy(pai)
}
